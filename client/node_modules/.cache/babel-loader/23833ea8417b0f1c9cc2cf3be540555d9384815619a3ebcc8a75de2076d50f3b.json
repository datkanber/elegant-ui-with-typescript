{"ast":null,"code":"const express = require('express');\nconst axios = require('axios');\nconst app = express();\nconst PORT = process.env.PORT || 5000;\n\n// Kaggle competitions endpoint'i\napp.get('/api/competitions', async (req, res) => {\n  try {\n    const response = await axios.get('https://www.kaggle.com/api/v1/competitions/list', {\n      auth: {\n        username: 'kanberburak',\n        // Kullanıcı adınız\n        password: 'c2d107bb83853622fc87fd8bfa487539' // API anahtarınız\n      }\n    });\n\n    // Gelen verilerden sadece ihtiyaç duyulan alanları çek\n    const cleanedCompetitions = response.data.map(competition => ({\n      title: competition.title,\n      url: competition.url,\n      description: competition.description,\n      reward: competition.reward,\n      deadline: competition.deadline,\n      organizationName: competition.organizationName\n    }));\n    res.json(cleanedCompetitions);\n  } catch (error) {\n    console.error('Error fetching competitions:', error.message);\n    res.status(500).json({\n      error: 'Failed to fetch competitions'\n    });\n  }\n});\napp.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}`);\n});","map":{"version":3,"names":["express","require","axios","app","PORT","process","env","get","req","res","response","auth","username","password","cleanedCompetitions","data","map","competition","title","url","description","reward","deadline","organizationName","json","error","console","message","status","listen","log"],"sources":["C:/Users/rootr/Desktop/GitHub/elegant-ui-with-typescript/client/src/components/Header.tsx"],"sourcesContent":["const express = require('express');\r\nconst axios = require('axios');\r\n\r\nconst app = express();\r\nconst PORT = process.env.PORT || 5000;\r\n\r\n// Kaggle competitions endpoint'i\r\napp.get('/api/competitions', async (req, res) => {\r\n  try {\r\n    const response = await axios.get('https://www.kaggle.com/api/v1/competitions/list', {\r\n      auth: {\r\n        username: 'kanberburak', // Kullanıcı adınız\r\n        password: 'c2d107bb83853622fc87fd8bfa487539', // API anahtarınız\r\n      },\r\n    });\r\n\r\n    // Gelen verilerden sadece ihtiyaç duyulan alanları çek\r\n    const cleanedCompetitions = response.data.map((competition) => ({\r\n      title: competition.title,\r\n      url: competition.url,\r\n      description: competition.description,\r\n      reward: competition.reward,\r\n      deadline: competition.deadline,\r\n      organizationName: competition.organizationName,\r\n    }));\r\n\r\n    res.json(cleanedCompetitions);\r\n  } catch (error) {\r\n    console.error('Error fetching competitions:', error.message);\r\n    res.status(500).json({ error: 'Failed to fetch competitions' });\r\n  }\r\n});\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`Server is running on port ${PORT}`);\r\n});\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;AAE9B,MAAME,GAAG,GAAGH,OAAO,CAAC,CAAC;AACrB,MAAMI,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;;AAErC;AACAD,GAAG,CAACI,GAAG,CAAC,mBAAmB,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC/C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACK,GAAG,CAAC,iDAAiD,EAAE;MAClFI,IAAI,EAAE;QACJC,QAAQ,EAAE,aAAa;QAAE;QACzBC,QAAQ,EAAE,kCAAkC,CAAE;MAChD;IACF,CAAC,CAAC;;IAEF;IACA,MAAMC,mBAAmB,GAAGJ,QAAQ,CAACK,IAAI,CAACC,GAAG,CAAEC,WAAW,KAAM;MAC9DC,KAAK,EAAED,WAAW,CAACC,KAAK;MACxBC,GAAG,EAAEF,WAAW,CAACE,GAAG;MACpBC,WAAW,EAAEH,WAAW,CAACG,WAAW;MACpCC,MAAM,EAAEJ,WAAW,CAACI,MAAM;MAC1BC,QAAQ,EAAEL,WAAW,CAACK,QAAQ;MAC9BC,gBAAgB,EAAEN,WAAW,CAACM;IAChC,CAAC,CAAC,CAAC;IAEHd,GAAG,CAACe,IAAI,CAACV,mBAAmB,CAAC;EAC/B,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC5DlB,GAAG,CAACmB,MAAM,CAAC,GAAG,CAAC,CAACJ,IAAI,CAAC;MAAEC,KAAK,EAAE;IAA+B,CAAC,CAAC;EACjE;AACF,CAAC,CAAC;AAEFtB,GAAG,CAAC0B,MAAM,CAACzB,IAAI,EAAE,MAAM;EACrBsB,OAAO,CAACI,GAAG,CAAC,6BAA6B1B,IAAI,EAAE,CAAC;AAClD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}